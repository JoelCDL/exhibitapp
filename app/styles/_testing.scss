// ***** For Testing Only ***** //

// Highlight all Bootstrap grid columns

body.column-test [class^="col-"] {
	border: 1px solid red;
	// background: #eee;
	// padding-top: 10px;
	// padding-bottom: 10px;
}

body.column-test .row .row [class^="col-"] {
  border: 1px solid green;
}

// Set image thumbnail size

.thumbview__image, .listview__image, .collect-row__thumbnail img {
	width: 100%;
	height: auto;
}

// Set image popover size

.popover__img-popover {
	width: 380px;
	height: 280px;
}

// Highlight image placeholders

body.image-test img {
	display: block;
	// width: 200px;
	// height: 130px;
	width: 100%;
	height: auto;
	border: 1px solid #ccc;
	background: #fff;
}

// Set a fixed height on Bootstrap columns for shapes

body.shapes-test [class^="col-"] {
	height: 100px;
}

// Increase size of Font Awesome icons to compare them

body.icons-test .fa {
	font-size: 2em !important;
}

// Highlight elements with border (ex: border: $bred;)

$bred: 1px solid red;
$bblue: 1px solid blue;
$bgreen: 1px solid green;

// Testing centering methods. First uses flexbox w/o needing a 3rd child. Second uses a 3rd child with a transform

.center1__parent {
	@include aspect-ratio(2, 1);
	margin: 0 25%;

  border: $bblue;
}

.center1__child {
	@extend .aspect-ratio-content;
	display: flex;
  align-items: center;
  margin: 0 25%;
}

.center1__content {
	border: $bred;
}



.center2__parent {
	@include aspect-ratio(2, 1);
	margin: 0 25%;

	border: $bblue;
}

.center2__child {
	@extend .aspect-ratio-content;
	margin: 0 25%;
}

.center2__content {
	display: block;
	position: absolute;
	top: 50%;
  transform: translateY(-50%);

	border: $bred;
}

// Testing background blend mode

.blend__container {
	width: 250px;
	border: $bred;
}

.blend__thumbnail-link {
	display: block;
	position: relative;
	margin: 0 20px 20px 0;
	background-size: 100%;
	background-color: #ccc; // fallback if no image
	// background-image: url() set in html as inline style

	&:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: 100%; // sets a square aspect ratio
  }

}

.blend__thumbnail-image {
	width: 100%;
	height: auto;
}

.blend__thumbnail-caption {
	position: absolute;
	left: 0;
	bottom: 0;
	right: 0;
	padding: 10px;
	color: #fff;
	background-color: rgba(241, 70, 0, 0.7);
	background-image: inherit;
	background-size: 100%;
	background-position: bottom;
	background-blend-mode: multiply;
	font-size: 1.2em;
}

// Testing relative sized icons within flexable containers

@mixin test__tile-icon($tile-icon-size-xs: 30px, $tile-icon-size-sm: 40px, $tile-icon-size-md: 80px, $tile-icon-size-lg: 90px) { // sets the white circle within the container
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: $tile-icon-size-xs;
  height: $tile-icon-size-xs;
  background-color: #fff;
  border-radius: 50%;

  @include bp(sm-screen) {
    width: $tile-icon-size-sm;
    height: $tile-icon-size-sm;
  }

  @include bp(md-screen) {
    width: $tile-icon-size-md;
    height: $tile-icon-size-md;
  }

  @include bp(lg-screen) {
    width: $tile-icon-size-lg;
    height: $tile-icon-size-lg;
  }

  &:before { // sets the icon within the white circle
    @extend .fa; // Font Awesome base class
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $design-primary-color;
    font-size: $tile-icon-size-xs * 0.6;

    @include bp(sm-screen) {
      font-size: $tile-icon-size-sm * 0.6;
    }

    @include bp(md-screen) {
      font-size: $tile-icon-size-md * 0.6;
    }

    @include bp(lg-screen) {
      font-size: $tile-icon-size-lg * 0.6;
    }

  }

}

.test__tile-icon {
  @include test__tile-icon(); // for custom icon sizes instead of defaults at xs, sm, md, and lg screen sizes, add comma separated number/unit value in parentheses, like: (20vw, 10vw, 8vw, 80px)
}















