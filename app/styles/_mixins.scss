// ##### Custom Mixins ##### //

// Abstract Bootstrap's responsive breakpoints for use in custom Sass.

@mixin bp($point) {

  @if $point == lg-screen {
    @media (min-width: $screen-lg-min), print and (min-width: $print-lg-min) { @content; }
  }
  @else if $point == md-screen {
    @media (min-width: $screen-md-min), print and (min-width: $print-md-min) { @content; }
  }
  @else if $point == sm-screen {
    @media (min-width: $screen-sm-min), print and (min-width: $print-sm-min) { @content; }
  }

}

// Placeholders for the mobile navbar using a <ul> <li> <a> structure

%navbar__container { // to be used with <ul>
	margin: 0;
  padding: 0;
  list-style: none;
  line-height: 1;
}

%navbar__bar { // to be used with <a>
	display: block;
  padding: 15px $layout-box-padding;
  color: #fff;
  background: $design-dark-gray-color;
  border-bottom: 1px solid #fff;

  &:hover {
    text-decoration: none;
  }

}

// Placeholder for the horizontal nav using a <ul> <li> <a> structure

%horizontal-nav__link { // to be used with <li>
	display: inline;
  border-left: 1px solid $design-dark-gray-color;
  padding: 0 0.5em;

  &:first-child {
    border-left: none;
  }

}

// Set the attributes for a non-image thumbnail

@mixin thumbview__no-image($thumb-border: $design-primary-color) {
  width: 100%; // expand the 1px .png to its container
  height: auto;
  border: 1px solid $thumb-border;
}

// ***** Thumbnail Icon Tiles ***** //

@mixin thumbnail__tile-icon($tile-icon-size-xs: 20vw, $tile-icon-size-sm: 10vw, $tile-icon-size-md: 80px) { // sets the white circle within the container
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: $tile-icon-size-xs;
  height: $tile-icon-size-xs;
  background-color: #fff;
  border-radius: 50%;

  @include bp(sm-screen) {
    width: $tile-icon-size-sm;
    height: $tile-icon-size-sm;
  }

  @include bp(md-screen) {
    width: $tile-icon-size-md;
    height: $tile-icon-size-md;
  }

  &:before { // sets the icon within the white circle
    @extend .fa; // Font Awesome base class
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $design-primary-color;
    font-size: $tile-icon-size-xs * 0.6;

    @include bp(sm-screen) {
      font-size: $tile-icon-size-sm * 0.6;
    }

    @include bp(md-screen) {
      font-size: $tile-icon-size-md * 0.6;
    }

  }

}

// ***** Thumbnail Icon Overlays ***** //

@mixin thumbnail__overlay-icon($overlay-icon-size-xs: 5vw, $overlay-icon-size-sm: 4vw, $overlay-icon-size-md: 30px) { // sets the white circle within the container
  position: absolute;
  left: 8%;
  bottom: 8%;
  width: $overlay-icon-size-xs;
  height: $overlay-icon-size-xs;
  background-color: #fff;
  border-radius: 50%;

  @include bp(sm-screen) {
    width: $overlay-icon-size-sm;
    height: $overlay-icon-size-sm;
  }

  @include bp(md-screen) {
    width: $overlay-icon-size-md;
    height: $overlay-icon-size-md;
  }

  &:before { // sets the icon within the white circle
    @extend .fa; // Font Awesome base class
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $design-primary-color;
    font-size: $overlay-icon-size-xs * 0.6;

    @include bp(sm-screen) {
      font-size: $overlay-icon-size-sm * 0.6;
    }

    @include bp(md-screen) {
      font-size: $overlay-icon-size-md * 0.6;
    }

  }

}

// Set an icon vertically and horizontally centered within a container

@mixin icon__centered-overlay($size-xs: 60px, $size-sm: 50px, $size-md: 45px, $icon-color: #fff, $icon-bg: $design-primary-color) {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $size-xs;
  height: $size-xs;
  margin: ((-$size-xs) / 2) 0 0 ((-$size-xs) / 2);
  line-height: $size-xs;
  font-size: $size-xs - 20;
  color: $icon-color;
  background: $icon-bg;

  @include bp(sm-screen) {
    width: $size-sm;
    height: $size-sm;
    margin: ((-$size-sm) / 2) 0 0 ((-$size-sm) / 2);
    line-height: $size-sm;
    font-size: $size-sm - 20;
  }

  @include bp(md-screen) {
    width: $size-md;
    height: $size-md;
    margin: ((-$size-md) / 2) 0 0 ((-$size-md) / 2);
    line-height: $size-md;
    font-size: $size-md - 20;
  }

}

// Sets an aspect ratio on a container div

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .aspect-ratio-content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}
